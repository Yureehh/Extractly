---
name: Python package

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Poetry Binary
      uses: actions/cache@v3
      with:
        path: ~/.poetry
        key: poetry-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: poetry-${{ runner.os }}-

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - name: Cache Poetry Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock', '**/pyproject.toml') }}
        restore-keys: ${{ runner.os }}-poetry-

    - name: Install Dependencies with uv
      run: |
          pip install uv
          uv install --locked

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Run Pre-commit Hooks
      run: pre-commit run --config .pre-commit-config.yaml --all-files

    - name: Run Linting and Formatting Checks with Ruff
      run: |
          ruff check --fix --unsafe-fixes
          ruff format

    - name: Run Tests with Coverage
      continue-on-error: true
      run: |
        poetry run pytest --cov=src --cov-fail-under=85 --cov-report xml

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

    - name: Build MkDocs
      run: mkdocs build

    - name: Deploy MkDocs
      run: mkdocs gh-deploy --force
